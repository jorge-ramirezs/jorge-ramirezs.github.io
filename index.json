[{"content":"Guia de Instalacion Oficial: https://archlinuxarm.org/platforms/armv6/raspberry-pi\nBajar Arch Linux para Raspberry Pi. https://archlinuxarm.org/about/downloads\nhttp://os.archlinuxarm.org/os/ArchLinuxARM-rpi-4-latest.tar.gz\nCrear SD Card. Una vez que tenemos arch en nuestro disco o si deseas mientras se descarga, comencemos a configurarla tarjeta SD, inserta la tarjeta en tu computadora.\nPrimero debemos verificar la tarjeta donde queremos instalar Arch.\n1  lsblk   ATENCIÓN: En mi caso el comando lsblk me dice que mi tarjeta está en /dev/mmcblk0, de aquí en adelante debes sustituir mmcblk0 por el dispositivo en tu computadora. Todos los cambios hechos en tu sistema son tu responsabilidad y yo no puedo hacerme responsable por ellos. Por favor continúa bajo tu propio riesgo.\nVamos a crear las particiones en la tarjeta. En este caso la tarjeta no tiene particiones, es completamente nueva.\n1  sudo fdisk /dev/mmcblk0   En el prompt presiona o.\nEsto borrará cualquier partición que se encuentre en la tarjeta.\nLuego, presiona \u0026lsquo;p\u0026rsquo; para listar las particiones.\nDespués presiona n, seguido de p para crear una partición primaria, 1 para designarla como la primera partición, presiona ENTER para aceptar los valores por defecto para el primer sector, después escribe +100M para crear la partición de 100 MB.\nPresiona t, luego c para definir el tipo de partición como W95 FAT32. Esta primer partición será nuestra partición “boot”\nPresiona n, para crear una nueva partición que será “root” y es donde estará el sistema operativo. Luego presiona p para definir una partición primaria, presiona 2 para definir que esta será nuestra 2da partición en la tarjeta, luego presiona ENTER dos veces para aceptar el sector de inicial y final de la partición.\nSi deseas revisar los cambios que acabas de hacer, presiona p para listar las nuevas particiones.\nPara guardar los cambios físicamente en la tarjeta y salir de fdisk, presiona w.\nAhora, primero, vamos a formatear la primera partición que creamos y montarla en un directorio local que llamaremos “boot”\n$ sudo mkfs.vfat /dev/mmcblk0p1\n$ mkdir boot\n$ sudo mount /dev/mmcblk0p1 boot\nDespués tenemos que formatear nuestra 2da partición y montarla en un directorio local que llamaremos simplemente “root”\n$ sudo mkfs.ext4 /dev/mmcblk0p2\n$ mkdir root\n$ sudo mount /dev/mmcblk0p1 root\nAhora vamos a descomprimir el archivo que dejamos bajando\n$ sudo bsdtar -xpf ArchLinuxARM-rpi-4-latest.tar.gz -C root\n$ sudo sync\nAhora necesitamos mover los archivos de root/boot a boot (directorio local)\n$ sudo mv root/boot/* boot\n(Opcional) Si deseas hacerle un overclock a tu raspberry, tenemos que modificar el archivo boot/config.txt y agregar los siguientes parámetros utilizando nano o vim.\nLos siguientes parámetros han sido probados en una Raspberry Pi 4 con 8 GB de memoria.\nover_voltage=6\narm_freq=2147\ngpu_freq=750\nDesmontamos los directorios locales para arrancar nuestra Raspberry Pi con Arch Linux.\n$ sudo umount boot root\nInserta la tarjeta en la raspberry Pi y conectala a la corriente. Es preferible que tengas la Raspberry conectada a la red con cable.\nEn tu ruteador busca la Raspberry e identifica la dirección IP que le asignó\nConéctate utilizando SSH con el usuario por defecto llamado “alarm” el password es “alarm”\nDespués cambiate a root, el password es root.\nLo último que voy a cubrir en este documento es el inicializar pacman y crear las llaves.\n$ pacman-key \u0026ndash;init\n$ pacman-key \u0026ndash;populate archlinuxarm\nY ya para terminar, actualiza Arch\nAgregar usuario “alarm” y habilitarel grupo “wheel” utilizando visudo\nusermod –aG wheel UserName\nPara verificar la temperatura:\n$ /opt/vc/bin/vcgencmd measure_temp\nhttps://linuxhint.com/raspberry_pi_temperature_monitor/#:~:text=If%20the%20temperature%20of%20the,for%20it%20to%20work%20properly.\nPara verificar la velocidad del CPU:\n$ /opt/vc/bin/vcgencmd measure_clock arm\nPara el recuadro alrededor de la pantalla:\ndisable_overscan=1\nInstalar i3\nInstalar XFCE4\nInstalar LDXM\nInstalar i3-wm\nInstalar i3-wm\n[alarm@alarmpi ~]$ sudo pacman -S i3-wm i3status i3blocks dmenu terminator\ncommunity/i3status 2.13-3 (i3)\nGenerates status bar to use with i3bar, dzen2 or xmobar\ncommunity/i3-wm 4.18.1-1 (i3)\nAn improved dynamic tiling window manager\ncommunity/i3blocks 1.5-3 (i3)\nDefine blocks for your i3bar status line\ncommunity/dmenu 4.9-2\nGeneric menu for X\nInstalar\n1 2 3 4  sudo pacman -S xorg-server xf86-video-fbdev lxdm startx sudo systemctl enable lxdm sudo systemctl start lxdm   ","description":"En esta ocasión vamos a instalar ArchLinux en una Raspberry Pi 4, la Raspberry que estoy utilizand tiene 8GB de memoria.","id":0,"section":"blog","tags":["archlinux","raspberry"],"title":"Como Instalar Archlinux en Raspberry Pi 4","uri":"/blog/linux/como-instalar-archlinux-raspberry-pi-4/"},{"content":"En este post aprenderás a instalar y configurar NeoVim como un IDE para desarrollar en Python y muchos otros trucos más.\n¿Qué es y porqué NeoVim? ","description":"Aprende a configurar Neovim como un IDE y deja de utilizar Vscode de una vez por todas.","id":1,"section":"blog","tags":["vim","vi","neovim"],"title":"Como Configurar Neovim Como Vscode","uri":"/blog/neovim/como-configurar-neovim-como-vscode/"},{"content":"Paso 1: Descargar Python El primer paso es descargar descargar python del sitio oficial: https://www.python.org/\nSolo secciona la opción de \u0026ldquo;Download\u0026rdquo; en la página principal, el stitio por defecto debe detectar que estás utlizando Windows y te ofrecerá el instalador que requieres.\nPaso 2: Ejecuta la instalación El siguiente paso es obvio, ejecuta la instalación.\nEs importante que durante la instalación selecciones que deseas instalar PIP y presiona \u0026ldquo;Next\u0026rdquo;\nEn la siguiente pantalla deja los parametros por default y presiona \u0026ldquo;Install\u0026rdquo;.\nA mi en lo personal me gusta que la instalación de Python esté en C:\\Python\u0026lt;\u0026lt;version\u0026gt;\u0026gt; donde la versión en este caso es la 3.8.\nPaso 3: Verifica la instalación Para verificar que todo haya ido conforme a lo planeado y que tienes Python instalado de manera correcta solo abre una ventana de comando y escribe\n1  python --version   Por último verifica que se haya instalado correctamente PIP.\n1  pip   pip tiene que regresar la ayuda, algo parecido a la imágen anterior. Si recibes un mensaje de error diciendo que no se encuentra instalado, solo ejecuta la instalación de nuevo y selecciona \u0026ldquo;Reparar\u0026rdquo;\nEso es todo por hoy, espero que no hayas tenido problemas al instalar python.\nSiguente tutorial será crear tu primer programa en #Python\n","description":"En tan solo 3 sencillos pasos, aprende a instalar python 3 en Windows 10.","id":2,"section":"blog","tags":["python","windows"],"title":"Como Instalar Python en Windows 10 en 3 Sencillos Pasos.","uri":"/blog/python/como-instalar-python-en-windows-10/"}]