[{"content":"BSPWM bspwm es un manejador de ventanas en mosaico, la caracteristica principal es que presenta las ventanas como hojas de un archivo binario.\nbspwm soporta el uso de multiple monitores y es configurado y controlado a traves de mensajes.\nSi has estado siguiendo mi tutorial de como instalar archlinux en una maquina virtual, esta es la continuacion.\nInstalacion. Vamos a instalar los paquetes necesarios para correr bspwm. En esta ocasion no voy a instalar un \u0026ldquo;Display Manager\u0026rdquo;, asi que para iniciar el modo grafico vamos a utilizar \u0026ldquo;startx\u0026rdquo;.\n1  sudo pacman -S xorg-server xorg-xinit xf86-video-qxl bspwm sxhkd dmenu nitrogen picom terminator chromium arandr   Configuracion Inicial Antes de iniciar el modo grafico tenemos que configurar bspwm y sxhkd\nVamos a crear los directorios de configuracion y copiar los archivos.\n1 2 3 4 5 6  mkdir ~/.config/bspwm mkdir ~/.config/sxhkd cp /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm cp /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd   Ahora vamos a cambiar la terminal por defecto en sxhkdrc por \u0026ldquo;terminator\u0026rdquo; que fue la teminal que instalamos.\nEdita ~/.config/sxhkd/sxhkdrc\nY remplaza urxvt por terminator para que quede como sigue:\n1 2 3  # terminal emulator super + Return terminator   Luego tenemos que configurar Xinit.\nPrimero copiamos el archivo de ejempo xinitrc en nuestro directorio\n1  cp /etc/X11/xinit/xinitrc ~/.xinitrc   Luego removemos las ultimas 5 lineas y agregamos las siguientes dos por lo pronto:\n1 2  picom -f \u0026amp; exec bspwm   Como estamos en una maquina virtual tenemos que deshabilitar la siguiente opcion en /etc/xdg/picom.conf\nCambia la opcion \u0026ldquo;vsync = true\u0026rdquo; a\n1  vsync = false   O si lo deseas puedes comentar la linea, eso hara que deshabilites la opcion.\nIniciar modo grafico y configurar escritorio Configurado bspwm y sxhkd ahora si, iniciamos el modo grafico con:\n1  startx   Veras que no aparece nada, para verificar que la configuracion es correcta y que bspwm esta funcionando presaiona\nsuper + Return para iniciar terminator. (Donde \u0026ldquo;super\u0026rdquo; es la tecla de \u0026ldquo;windows\u0026rdquo; en tu teclado)\nConfigurar resolucion de pantalla En la terminal que acabas de abrir, teclea:\n1  arandr   para arreglar la resolucion de la pantalla.\nPara grabar la configuracion selecciona el boton de \u0026ldquo;guardar\u0026rdquo; o \u0026ldquo;save\u0026rdquo; y nombra el arcvhivo \u0026ldquo;display.sh\u0026rdquo;\nLo siguiente es hacer este archivo ejecutable con:\n1  chmod +x ~/.screenlayout/display.sh   Luego agregalo a .xinitrc justo antes de \u0026ldquo;picom -f \u0026amp;\u0026rdquo; para que quede como sigue:\n1 2 3  $HOME/.screenlayout/display.sh picom -f\u0026amp; exec bspwm   Para salir de bspwm, presiona \u0026ldquo;super + alt + q\u0026rdquo;\nE inicia el modo grafico de nuevo con startx.\nselecciona una imagen de wallpaper\ninicia nitrogen y configura el wallpaper\nagrega nitrogen a xinitrc\n1 2 3 4  $HOME/.screenlayout/display.sh nitrogen --restore \u0026amp; picom -f\u0026amp; exec bspwm   Para \u0026ldquo;arreglar\u0026rdquo; el cursor debes instalar xorg-xsetroot\n1  sudo pacman -S xorg-xsetroot   Agrega xsetroot -cursor_name left_ptr a .xinitrc para que quede como sigue.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  #!/bin/sh  userresources=$HOME/.Xresources usermodmap=$HOME/.Xmodmap sysresources=/etc/X11/xinit/.Xresources sysmodmap=/etc/X11/xinit/.Xmodmap # merge in defaults and keymaps if [ -f $sysresources ]; then xrdb -merge $sysresources fi if [ -f $sysmodmap ]; then xmodmap $sysmodmap fi if [ -f \u0026#34;$userresources\u0026#34; ]; then xrdb -merge \u0026#34;$userresources\u0026#34; fi if [ -f \u0026#34;$usermodmap\u0026#34; ]; then xmodmap \u0026#34;$usermodmap\u0026#34; fi # start some nice programs if [ -d /etc/X11/xinit/xinitrc.d ] ; then for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do [ -x \u0026#34;$f\u0026#34; ] \u0026amp;\u0026amp; . \u0026#34;$f\u0026#34; done unset f fi # Estas son las lineas que agregamos al archivo $HOME/.screenlayout/display.sh xsetroot -cursor_name left_ptr nitrogen --restore \u0026amp; picom -f\u0026amp; exec bspwm   Instalar Polybar Polybar esta en los repositorios AUR, para eso debemos tener instalado \u0026ldquo;yay\u0026rdquo;.\nCuando instalamos archlinux, tambien instalamos \u0026ldquo;git\u0026rdquo; si no estas siguiendo esta serie de tutoriales, solo instala o verifica que tengas \u0026ldquo;git\u0026rdquo; instalado.\nInstalar \u0026ldquo;yay\u0026rdquo; Para instalar yay teclea los siguientes comandos:\n1 2 3 4  cd ~ git clone https://aur.archlinux.org/yay.git cd yay makepkg -si   Instalar Polybar Para instalar Polybar corremos:\n1  yay polybar   Acepta los defaults y selecciona \u0026ldquo;N\u0026rdquo; para que no muestre las diferencias.\nConfigurar Polybar Comienza por instalar el archivo de configuracion de ejemplo.\n1  install -Dm /usr/share/doc/polybar/config $HOME/.config/polybar/config   Instala los tipos de letra utilizados en la barra de ejemplo\n1 2  sudo pacman -S ttf-unifont siji-git xorg-fonts-misc yay -S ttf-unifont siji-git   Ahora necesitamos crear un script para iniciar Polybar en\n~/.config/polybar/launch.sh Con el siguiente contenido:\n1 2 3 4 5 6 7 8 9 10 11 12  #!/usr/bin/env bash  # Terminate already running bar instances killall -q polybar # If all your bars have ipc enabled, you can also use # polybar-msg cmd quit # Launch bar1 and bar2 echo \u0026#34;---\u0026#34; | tee -a /tmp/polybar1.log /tmp/polybar2.log polybar example \u0026gt;\u0026gt;/tmp/polybar1.log 2\u0026gt;\u0026amp;1 \u0026amp; echo \u0026#34;Bars launched...\u0026#34;   Después tenemos que hacer el script ejecutable con:\n1  chmod +x $HOME/.config/polybar/launch.sh   Después agregamos este script en nuestro archivo bspwmrc para que quede de la siguiente manera:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  #! /bin/sh  sxhkd \u0026amp; $HOME/.config/polybar/launch.sh bspc monitor -d I II III IV V VI VII VIII IX X bspc config border_width 2 bspc config window_gap 12 bspc config split_ratio 0.52 bspc config borderless_monocle true bspc config gapless_monocle true bspc rule -a Gimp desktop=\u0026#39;^8\u0026#39; state=floating follow=on bspc rule -a Chromium desktop=\u0026#39;^2\u0026#39; bspc rule -a mplayer2 state=floating bspc rule -a Kupfer.py focus=on bspc rule -a Screenkey manage=off   Resultado Final:\n","description":"En este post vamos a instalar bspwm como manejador de ventanas en una instalacion limpia de Arch Linux. Ademas vamos a instalar y configurar Polybar.","id":0,"section":"blog","tags":["archlinux","linux","bspwm","polybar"],"title":"Como Instalar Bspwm Polybar en Archlinux","uri":"/blog/linux/como-instalar-bspwm-polybar-en-archlinux/"},{"content":"Bajar el ISO El primer paso obviamente es bajar el ISO del sitio oficial\nCrear una máquina virtual en VirtualBox Vamos a crear una máquina virtual en VirtualBox, las espicificaciones pueden variar dependiendo de tu computadora, en mi caso estoy corriendo VBox en una laptop con 8GB de Memoria y suficiente espacio en disco.\nCrea una máquina virtual nueva con el siguiente nombre y tipo Presiona \u0026ldquo;New\u0026rdquo; para crear una nueva maquina virtual, la llamaremos \u0026ldquo;ArchLinux\u0026rdquo;, sera de tipo \u0026ldquo;Linux\u0026rdquo; por supuesto y VBox deberá seleccionar por defecto la version, si no lo hace asegurate de que la versión sea \u0026ldquo;Arch Linux (64\u0026rsquo;bit)\nPresiona \u0026ldquo;Next\u0026rdquo; o \u0026ldquo;Siguiente\u0026rdquo; para continuar,\nAsigna la memoria Asigna la memoria que requieras o que tengas disponible. La guía oficial de Arch Linux recomenda como mínimo 530 MB de RAM y 2GB de espacio en disco, pero esta máquina nos va a servir para los siguientes tutoriales yo le voy a asignar 4GB de RAM y 10GB en disco; después le instalaremos un escritorio o manejador de ventanas.\nY pesiona \u0026ldquo;Siguente\u0026rdquo; o \u0026ldquo;Next\u0026rdquo;\nCrea un disco virtual Como estamos creando una máquina totalmente nueva, seleccionaremos crear un disco virtual Nuevo y presiona \u0026ldquo;Crear\u0026rdquo;\nSelecciona el tipo de disco que sea VDI (VirtualBox Disk Image) y presiona \u0026ldquo;Next\u0026rdquo;\nAhora selecciona el tipo de almacenamiento dinámico, esto hará que VirtualBox cree un archivo el cual utilizará para almacenar los datos y que irá creciendo conforme vayamos agregando más cosas en nuestra máquina virtual, esto quiere decir que aunque hayamos creado un disco virtual de 10GB, si solo utilizamos 5GB, esto será lo que estaremos utilizando físicamente en nuestra computadora.\nPor último asigna el espacio y presiona \u0026ldquo;Crear\u0026rdquo;.\nConfigura la nueva máquina virtual Antes de iniciar nuestra nueva máquina virtual tenemos que hacer unas modificaciones. La intención de este tutorial es que adquieras los conocimientos para instalar Arch Linux en tu laptop o PC de escritorio. Las computadoras actuales utilizan UEFI que es lo que viene a reemplazar lo que antes era el BIOS de las computadoras antiguas.\nHabilita EFI Dicho esto, en la pantalla principal de VirtualBox, selecciona tu nueva máquina virtual y presiona \u0026ldquo;Configuración\u0026rdquo; o \u0026ldquo;Settings\u0026rdquo;.\nLuego selecciona \u0026ldquo;Sistema\u0026rdquo; o \u0026ldquo;System\u0026rdquo;.\nAquí asegurate de habilitar la opción de EFI\nModifica el controlador de gráficos A continuación vamos a modificar el controlador de gráficos de nuestra máquina virtual, para esto Selecciona \u0026ldquo;Display\u0026rdquo; y en el controlador de gráficos selecciona VBoxSVGA Y presiona \u0026ldquo;OK\u0026rdquo;\nVirtualBox te dirá que la configuración es inválida, no hagas caso, no pasa nada, confía en lo que lees en Internet #Sarcasmo\nCambia el tipo de conexión a la red Por último debemos cambiar el tipo de conexión a la red para que sea tipo \u0026ldquo;Bridged\u0026rdquo;.\nInstala Arch Linux Inicia la máquina virtual Ahora si vamos a comenzar con la instalación de Arch Linux.\nUna vez que inicias la máquina virtual, como no tiene sistema operativo VirtualBox debe darte la opción de seleccionar un ISO para arrancar el sistema.\nSi por alguna razón no lo hace, lo que puedes hacer es seleccionar el ISO de Arch Linux y asignarlo Disco Óptico como se ve en la siguiente pantalla\nSeleciona \u0026ldquo;Storage\u0026rdquo; luego el controlador IDE y luego selecciona \u0026ldquo;Seleccionar Disco\u0026hellip;\u0026rdquo;\nInicia la Instalación de Arch Linux Para iniciar la instalación selecciona Arch Linux archiso x86_64 UEFI CD\nUna vez iniciado el sistema comienza lo bueno, ahora sí, vamos a instalar Arch Linux.\nConfigura el Teclado En mi caso estoy utilizando un teclado en Inglés así que no requiero en este paso, pero si tu estás utilizando un teclado en Español lo mejor es que lo configures para no batallar y hacer la instalación más sencilla.\n1  loadkeys es   Verifica UEFI en la maquina virtual Siguiente vamos a verificar que tengamos configurada nuestra máquina virtual con UEFI activado, para eso debemos teclear:\n1  ls /sys/firmware/efi/efivars   El commando deberá regresar un montón de variables en la pantalla, si no es así regresa al paso donde debes habilitar UEFI en la máquina virtual\nSincroniza el reloj A continuación vamos a sincronizar el reloj con internet, para eso escribimos\n1  timedatectl set-ntp true   Selecciona el servidor más cercano para instalar los paquetes (Mirror) Para esto vamos a necesitar un paquete que se llama Reflector, así que vamos a instalarlo primero escribiendo\n1  sudo pacman -Syy reflector   Ahora selecciona el servidor más cercano a donde te encuentras, para ver una lista de países escribe\n1  reflector --list-countries | more   Ya que tengas identificado el país que te queda más cerca escribe lo siguiente:\n(En mi caso como estoy en Estados Unidos, escogeré United States por supuesto, pero tú puedes cambialo por el país de la lista anterior que te quede más cerca)\n1  reflector -c \u0026#34;United States\u0026#34; -a 6 --sort rate --save /etc/pacman.d/mirrorlist   Actualiza los servidores de paquetes Siguente teclea\n1  pacman -Syyy   Crea Particiones en el Disco Primero vamos a verificar cual es el dispositivo donde se encuentra el disco de nuestra máquina virtual\n1  lsblk   Mi disco está en /dev/sda\nTenemos que crear 2 particiones, una para los archivos de inicio o \u0026ldquo;boot\u0026rdquo; y otra donde estará instalado Arch Linux, como este es un tutorial de \u0026ldquo;entrenamiento\u0026rdquo; no vamos a crear partició de SWAP ni tampoco partición para el directorio de \u0026ldquo;home\u0026rdquo;, vamos a hacer una instalación sencilla.\nLa primera partición deberá de ser de tipo EFI y la segunda tipo Linux\nPara crear las particiones voy a utilizar cfdisk\n1  cfdisk   Selecciona gpt\nLuego creamos la primera partición.\n Selecciona [ New ] El tamaño de la primera partición será de 250M  Selecciona [ Type ] y luego selecciona el tipo \u0026ldquo;EFI System\u0026rdquo;  Selecciona el espacio disponible (Free Space), luego selecciona [ New ] , presiona ENTER y luego ENTER de nuevo para seleccionar todo el espacio disponible, en mi caso los 9.8G restantes  Selecciona [ Type ] y luego selecciona \u0026ldquo;Linux filesystem\u0026rdquo; de la lista  Selecciona [ Write ] para guardar los cambios y crear las particiones. cfdisk te preguntara si estás seguro de que deseas crear las nuevas particiones. Teclea \u0026ldquo;yes\u0026rdquo; y presiona ENTER  Verifica las particiones Para verificar que todo haya ido bien teclea lsblk y asegurate de que las particiones estén como sigue\nFormatea las particiones  La primera partición es nuestra partición tipo EFI por lo tanto debemos formatearla de tipo FAT32  1  mkfs.fat -F32 /dev/sda1   Formatea la segunda partición, pero en esta ocasión el tipo será EXT4  1  mkfs.ext4 /dev/sda2   Monta las particiones Una vez creadas y formateadas nuestras particiones ahora debemos montarlas en nuestro sistema, para eso necesitmos hacer lo siguiente:\n Montar la segunda partición en /mnt que es nuestro directorio para la instalación  1  mount /dev/sda2 /mnt   Siguiente debemos crear el directorio donde estará nuestro partición de inicio, para eso vamos a crear un directorio nuevo en /mnt/boot/efi (El directorio boot no existe, así que debemos crearlo primero o podemos crear ambos directorios al mismo tiempo con el siguente comando)  1  mkdir -p /mnt/boot/efi   Monta la primera partición en /mnt/boot/efi  1  mount /dev/sda1 /mnt/boot/efi   Verifica que las particiones estén montadas correctamente utilizando lsblk  1  lsblk   Instala los paquetes \u0026ldquo;base\u0026rdquo; Una vez montadas las particiones comenzamos la instalación de los paquetes base, los paquetes que vamos a instalar son \u0026ldquo;base, linux, linux-firmware y vim (puedes instalar nano si lo deseas)\n1  pacstrap /mnt base linux linux-firmware vim   Crear fstab Listo, la instalación base ya está lista, ahora lo que necesitamos hacer es crear nuestro archivo fstab\n1  genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab   Crea el archivo de SWAP Listo, ya que veas en tu archivo de fstab que todo está correcto, que tienes ambas particiones configuradas correctamente, vamos a crear nuestro archivo de swap.\n Primero entra a la instalación base  1  arch-chroot /mnt   Fíjate bien y el prompt cambió, ahora está entre corchetes [root@archiso /]\nVamos a crear el archivo de swap utilizando el comando dd, el archivo que voy a crear será de 2GB, es decir 2 bloques de 1GB cada uno.  1  dd if=/dev/zero of=/swapfile bs=1G count=2 status=progress   Ahora hay que cambiar los permisos del archivo  1  chmod 600 /swapfile   Cambia el tipo de archivo a swap  1  mkswap /swapfile   Habilita el archivo con:  1  swapon /swapfile   Agrega el archivo al sistema de archivos, es decir, al archivo fstab. (Yo voy a utilizar vim, si instalaste nano, utiliza nano)  1  vim /etc/fstab   Al final del archivo agrega lo siguiente:\n1  /swapfile none swap defaults 0 0   Configura tu zona horaria Ahora podemos continuar con la configuración de nuestra instalación, así que toca el turno de la zona horaria.\n Primero vamos a ver un listado de las zonas horarias disponibles. La zona horaria donde me encuentro es la zona de Chicago, sustituye Chicago por la ciudad que te corresponda, por ejemplo Mexico  1  timedatectl list-timezones | grep Chicago   Una vez identificada la zona horaria, creamos un enlace simbolico en etc/localtime  1  ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime   Ahora ya podemos sincronizar el reloj del sistema con el reloj de hardware  1  hwclock --systohc   Configura tu \u0026ldquo;Localización\u0026rdquo; Esto es para decirle a Arch Linux donde te encuentras y cual es el grupo de caracteres que corresponden a tu idioma por ejemplo.\nEn mi caso voy a utlizar Inglés de Estados Unidos, el código es \u0026ldquo;en_US.UTF-8\u0026rdquo; pero por ejemplo, si te encuentras en México y estás utilizando teclado en Español y deberás utilizar el código de \u0026ldquo;es_MX.UTF-8\u0026rdquo;.\nNota: Puedes habilitar más de un código de localización.\n Para habilitar el código de localización deseado, edita el siguente archivo y descomenta la línea donde se encuentre el código que andas buscando. (De nuevo, yo utilizo vim, tu puedes hacerlo con nano o con el que hayas instalado al inicio)  1  vim /etc/locale.gen   Genera la localización en el sistema  1  locale-gen   Ahora necesitamos crear el archivo de configuración en nuestra instalación para eso:  1  echo LANG=en_US.UTF-8 \u0026gt;\u0026gt; /etc/locale.conf   Nota: Sustituye \u0026ldquo;en_US.UTF-8\u0026rdquo; por el código que hayas habilitado en el paso anterior\n(Opcional) Si al comienzo de la instalación seleccionaste el tipo de teclado, deberás agregarlo a tu instalación con el siguente comando:\n(Suponiendo que seleccionaste \u0026ldquo;es\u0026rdquo;)  1  echo KEYMAP=es \u0026gt;\u0026gt; /etc/vconsole.conf   Configura la Red  Crea el archivo \u0026ldquo;hostname\u0026rdquo; para darle un nombre a tu máquina virutal. En mi caso voy a ser creativo y le daré el nombre de \u0026ldquo;archlinux\u0026rdquo;  1  vim /etc/hostname   Agrega lo siguiente a tu archivo /etc/hosts  1  vim /etc/hosts   1 2 3  127.0.0.1\tlocalhost ::1\tlocalhost 127.0.1.1\tarchlinx.localdomain\tarchlinux   Crea un password para root El siguiente paso de la instalación es darle un password a nuestro usuario de root.\nComo ya estamos en nuestra instalación, para cambiar el password solo debemos teclear:\n1  passwd   En el prompt escribe el nuevo password (Uno que no se te olvide) y en el siguente prompt vuelve a escribir el mismo password para confirmarlo.\nInstala los paquetes finales Es momento de instalar nuestro \u0026ldquo;boot loader\u0026rdquo; y paquetes finales antes de reiniciar la máquina. GRUB será nuestro boot loader.\n Instala los siguientes paquetes. Puedes agregar paquetes que creas necesarios.  1  pacman -S grub efibootmgr networkmanager network-manager-applet dialog os-prober mtools dosfstools base-devel linux-headers cups reflector openssh git xdg-utils xdg-user-dirs virtualbox-guest-utils   Acepta todos los prompts por defecto. Y presiona ENTER para continuar con la instalación\nSi te aparece la siguiente pantalla, presiona ENTER para aceptar las llaves PGP.\nInstala GRUB Es momento de instalar grub en el directorio /boot/efi que creamos al inicio, que es la partición de inicio\n1  grub-install --target=x86_64-efi --efi-directory=/boot/efi --botloader-id=GRUB   Ahora necesitamos crear el archivo de configuración  1  grub-mkconfig -o /boot/grub/grub.cfg   Habilita los servicios Llegó el momento de habilitar los servicios que correrán cada que reinicies la máquina.\n Habilita el manejador de la red Continua con el servicio de SSH Luego el servicio para imprimir  1 2 3  systemctl enable NetworkManager systemctl enable sshd systemctl enable org.cups.cupsd   Crea tu usuario Todo lo hemos hecho con el usuario de root, pero siempre es conveniente tener tu propio usuario para no utilizar root para las tareas diarias. Voy a crear mi usuario que se llamará \u0026ldquo;jorge\u0026rdquo;.\n Crea el usuario y asignalo al grupo \u0026ldquo;wheel\u0026rdquo; Crea un password para tu usuario  1 2  useradd -mG wheel jorge passwd jorge   Ahora para darle privilegios de \u0026ldquo;sudo\u0026rdquo; y puedas ejecutar comandos como superusuario \u0026ldquo;root\u0026rdquo;, debemos descomentar la linea que dice \u0026quot;%wheel ALL=(ALL) ALL\u0026rdquo; con el siguiente comando  Recuerda que puedes sustituir \u0026ldquo;vim\u0026rdquo; por \u0026ldquo;nano\u0026rdquo; si lo prefieres.\n1  EDITOR=vim visudo   Sal de la instalación y reinicia la máquina virtual Con esto terminamos la instalación, así que solo queda:\n Salir de la instalación Desmontar las particiones Reiniciar la máquina virtual  1 2 3  exit umount -a reboot   Instalación Exitosa Después de reiniciar la máquina virtual verás que GRUB está instalado y debe estar funcionando correctamente.\nEntra a tu nueva instalación de Arch Linux con el usuario y password que creaste para verificar que todo esté funcionando correctamente.\nSi encontraste este tutorial útil no olvides que puedes compartirlo con tus compañeros, familiares y amigos utilizando los botones al final del artículo.\nNo dejes de visitarme porque estaré subiendo más tutoriales, ahora lo que sigue es instalar un escritorio en esta máquina virtual. ¿Cuál te gustaría instalar? ¿Gnome? ¿KDE? ¿O talvez un manejador de ventanas como i3 o awesome?\n","description":"Hoy vamos a instalar ArchLinux en una máquina virtual en VirtualBox. La instalación es muy parecida a la que deberás llevar a cabo cuando lo instalemos en una laptop o PC. Bien, entoces, comencemos...","id":1,"section":"blog","tags":["archlinux","linux"],"title":"Como Instalar Archlinux en Virtualbox","uri":"/blog/linux/como-instalar-archlinux-en-virtualbox/"},{"content":"En este post aprenderás a instalar y configurar NeoVim como un IDE para desarrollar en Python y muchos otros trucos más.\n¿Qué es y porqué NeoVim? ","description":"Aprende a configurar Neovim como un IDE y deja de utilizar Vscode de una vez por todas.","id":2,"section":"blog","tags":["vim","vi","neovim"],"title":"Como Configurar Neovim Como Vscode","uri":"/blog/neovim/como-configurar-neovim-como-vscode/"},{"content":"Paso 1: Descargar Python El primer paso es descargar descargar python del sitio oficial: https://www.python.org/\nSolo secciona la opción de \u0026ldquo;Download\u0026rdquo; en la página principal, el stitio por defecto debe detectar que estás utlizando Windows y te ofrecerá el instalador que requieres.\nPaso 2: Ejecuta la instalación El siguiente paso es obvio, ejecuta la instalación.\nEs importante que durante la instalación selecciones que deseas instalar PIP y presiona \u0026ldquo;Next\u0026rdquo;\nEn la siguiente pantalla deja los parametros por default y presiona \u0026ldquo;Install\u0026rdquo;.\nA mi en lo personal me gusta que la instalación de Python esté en C:\\Python\u0026lt;\u0026lt;version\u0026gt;\u0026gt; donde la versión en este caso es la 3.8.\nPaso 3: Verifica la instalación Para verificar que todo haya ido conforme a lo planeado y que tienes Python instalado de manera correcta solo abre una ventana de comando y escribe\n1  python --version   Por último verifica que se haya instalado correctamente PIP.\n1  pip   pip tiene que regresar la ayuda, algo parecido a la imágen anterior. Si recibes un mensaje de error diciendo que no se encuentra instalado, solo ejecuta la instalación de nuevo y selecciona \u0026ldquo;Reparar\u0026rdquo;\nEso es todo por hoy, espero que no hayas tenido problemas al instalar python.\nSiguente tutorial será crear tu primer programa en #Python\n","description":"En tan solo 3 sencillos pasos, aprende a instalar python 3 en Windows 10.","id":3,"section":"blog","tags":["python","windows"],"title":"Como Instalar Python en Windows 10 en 3 Sencillos Pasos.","uri":"/blog/python/como-instalar-python-en-windows-10/"}]