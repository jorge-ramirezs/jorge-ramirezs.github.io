[{"content":"Bajar el ISO El primer paso obviamente es bajar el ISO del sitio oficial\nCrear una máquina virtual en VirtualBox Vamos a crear una máquina virtual en VirtualBox, las espicificaciones pueden variar dependiendo de tu computadora, en mi caso estoy corriendo VBox en una laptop con 8GB de Memoria y suficiente espacio en disco.\nCrea una máquina virtual nueva con el siguiente nombre y tipo Presiona \u0026ldquo;New\u0026rdquo; para crear una nueva maquina virtual, la llamaremos \u0026ldquo;ArchLinux\u0026rdquo;, sera de tipo \u0026ldquo;Linux\u0026rdquo; por supuesto y VBox deberá seleccionar por defecto la version, si no lo hace asegurate de que la versión sea \u0026ldquo;Arch Linux (64\u0026rsquo;bit)\nPresiona \u0026ldquo;Next\u0026rdquo; o \u0026ldquo;Siguiente\u0026rdquo; para continuar,\nAsigna la memoria Asigna la memoria que requieras o que tengas disponible. La guía oficial de Arch Linux recomenda como mínimo 530 MB de RAM y 2GB de espacio en disco, pero esta máquina nos va a servir para los siguientes tutoriales yo le voy a asignar 4GB de RAM y 10GB en disco; después le instalaremos un escritorio o manejador de ventanas.\nY pesiona \u0026ldquo;Siguente\u0026rdquo; o \u0026ldquo;Next\u0026rdquo;\nCrea un disco virtual Como estamos creando una máquina totalmente nueva, seleccionaremos crear un disco virtual Nuevo y presiona \u0026ldquo;Crear\u0026rdquo;\nSelecciona el tipo de disco que sea VDI (VirtualBox Disk Image) y presiona \u0026ldquo;Next\u0026rdquo;\nAhora selecciona el tipo de almacenamiento dinámico, esto hará que VirtualBox cree un archivo el cual utilizará para almacenar los datos y que irá creciendo conforme vayamos agregando más cosas en nuestra máquina virtual, esto quiere decir que aunque hayamos creado un disco virtual de 10GB, si solo utilizamos 5GB, esto será lo que estaremos utilizando físicamente en nuestra computadora.\nPor último asigna el espacio y presiona \u0026ldquo;Crear\u0026rdquo;.\nConfigura la nueva máquina virtual Antes de iniciar nuestra nueva máquina virtual tenemos que hacer unas modificaciones. La intención de este tutorial es que adquieras los conocimientos para instalar Arch Linux en tu laptop o PC de escritorio. Las computadoras actuales utilizan UEFI que es lo que viene a reemplazar lo que antes era el BIOS de las computadoras antiguas.\nHabilita EFI Dicho esto, en la pantalla principal de VirtualBox, selecciona tu nueva máquina virtual y presiona \u0026ldquo;Configuración\u0026rdquo; o \u0026ldquo;Settings\u0026rdquo;.\nLuego selecciona \u0026ldquo;Sistema\u0026rdquo; o \u0026ldquo;System\u0026rdquo;.\nAquí asegurate de habilitar la opción de EFI\nModifica el controlador de gráficos A continuación vamos a modificar el controlador de gráficos de nuestra máquina virtual, para esto Selecciona \u0026ldquo;Display\u0026rdquo; y en el controlador de gráficos selecciona VBoxSVGA Y presiona \u0026ldquo;OK\u0026rdquo;\nVirtualBox te dirá que la configuración es inválida, no hagas caso, no pasa nada, confía en lo que lees en Internet #Sarcasmo\nCambia el tipo de conexión a la red Por último debemos cambiar el tipo de conexión a la red para que sea tipo \u0026ldquo;Bridged\u0026rdquo;.\nInstala Arch Linux Inicia la máquina virtual Ahora si vamos a comenzar con la instalación de Arch Linux.\nUna vez que inicias la máquina virtual, como no tiene sistema operativo VirtualBox debe darte la opción de seleccionar un ISO para arrancar el sistema.\nSi por alguna razón no lo hace, lo que puedes hacer es seleccionar el ISO de Arch Linux y asignarlo Disco Óptico como se ve en la siguiente pantalla\nSeleciona \u0026ldquo;Storage\u0026rdquo; luego el controlador IDE y luego selecciona \u0026ldquo;Seleccionar Disco\u0026hellip;\u0026rdquo;\nInicia la Instalación de Arch Linux Para iniciar la instalación selecciona Arch Linux archiso x86_64 UEFI CD\nUna vez iniciado el sistema comienza lo bueno, ahora sí, vamos a instalar Arch Linux.\nConfigura el Teclado En mi caso estoy utilizando un teclado en Inglés así que no requiero en este paso, pero si tu estás utilizando un teclado en Español lo mejor es que lo configures para no batallar y hacer la instalación más sencilla.\n1  loadkeys es   Verifica UEFI en la maquina virtual Siguiente vamos a verificar que tengamos configurada nuestra máquina virtual con UEFI activado, para eso debemos teclear:\n1  ls /sys/firmware/efi/efivars   El commando deberá regresar un montón de variables en la pantalla, si no es así regresa al paso donde debes habilitar UEFI en la máquina virtual\nSincroniza el reloj A continuación vamos a sincronizar el reloj con internet, para eso escribimos\n1  timedatectl set-ntp true   Selecciona el servidor más cercano para instalar los paquetes (Mirror) Para esto vamos a necesitar un paquete que se llama Reflector, así que vamos a instalarlo primero escribiendo\n1  sudo pacman -Syy reflector   Ahora selecciona el servidor más cercano a donde te encuentras, para ver una lista de países escribe\n1  reflector --list-countries | more   Ya que tengas identificado el país que te queda más cerca escribe lo siguiente:\n(En mi caso como estoy en Estados Unidos, escogeré United States por supuesto, pero tú puedes cambialo por el país de la lista anterior que te quede más cerca)\n1  reflector -c \u0026#34;United States\u0026#34; -a 6 --sort rate --save /etc/pacman.d/mirrorlist   Actualiza los servidores de paquetes Siguente teclea\n1  pacman -Syyy   Crea Particiones en el Disco Primero vamos a verificar cual es el dispositivo donde se encuentra el disco de nuestra máquina virtual\n1  lsblk   Mi disco está en /dev/sda\nTenemos que crear 2 particiones, una para los archivos de inicio o \u0026ldquo;boot\u0026rdquo; y otra donde estará instalado Arch Linux, como este es un tutorial de \u0026ldquo;entrenamiento\u0026rdquo; no vamos a crear partició de SWAP ni tampoco partición para el directorio de \u0026ldquo;home\u0026rdquo;, vamos a hacer una instalación sencilla.\nLa primera partición deberá de ser de tipo EFI y la segunda tipo Linux\nPara crear las particiones voy a utilizar cfdisk\n1  cfdisk   Selecciona gpt\nLuego creamos la primera partición.\n Selecciona [ New ] El tamaño de la primera partición será de 250M  Selecciona [ Type ] y luego selecciona el tipo \u0026ldquo;EFI System\u0026rdquo;  Selecciona el espacio disponible (Free Space), luego selecciona [ New ] , presiona ENTER y luego ENTER de nuevo para seleccionar todo el espacio disponible, en mi caso los 9.8G restantes  Selecciona [ Type ] y luego selecciona \u0026ldquo;Linux filesystem\u0026rdquo; de la lista  Selecciona [ Write ] para guardar los cambios y crear las particiones. cfdisk te preguntara si estás seguro de que deseas crear las nuevas particiones. Teclea \u0026ldquo;yes\u0026rdquo; y presiona ENTER  Verifica las particiones Para verificar que todo haya ido bien teclea lsblk y asegurate de que las particiones estén como sigue\nFormatea las particiones  La primera partición es nuestra partición tipo EFI por lo tanto debemos formatearla de tipo FAT32  1  mkfs.fat -F32 /dev/sda1   Formatea la segunda partición, pero en esta ocasión el tipo será EXT4  1  mkfs.ext4 /dev/sda2   Monta las particiones Una vez creadas y formateadas nuestras particiones ahora debemos montarlas en nuestro sistema, para eso necesitmos hacer lo siguiente:\n Montar la segunda partición en /mnt que es nuestro directorio para la instalación  1  mount /dev/sda2 /mnt   Siguiente debemos crear el directorio donde estará nuestro partición de inicio, para eso vamos a crear un directorio nuevo en /mnt/boot/efi (El directorio boot no existe, así que debemos crearlo primero o podemos crear ambos directorios al mismo tiempo con el siguente comando)  1  mkdir -p /mnt/boot/efi   Monta la primera partición en /mnt/boot/efi  1  mount /dev/sda1 /mnt/boot/efi   Verifica que las particiones estén montadas correctamente utilizando lsblk  1  lsblk   Instala los paquetes \u0026ldquo;base\u0026rdquo; Una vez montadas las particiones comenzamos la instalación de los paquetes base, los paquetes que vamos a instalar son \u0026ldquo;base, linux, linux-firmware y vim (puedes instalar nano si lo deseas)\n1  pacstrap /mnt base linux linux-firmware vim   Crear fstab Listo, la instalación base ya está lista, ahora lo que necesitamos hacer es crear nuestro archivo fstab\n1  genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab   Crea el archivo de SWAP Listo, ya que veas en tu archivo de fstab que todo está correcto, que tienes ambas particiones configuradas correctamente, vamos a crear nuestro archivo de swap.\n Primero entra a la instalación base  1  arch-chroot /mnt   Fíjate bien y el prompt cambió, ahora está entre corchetes [root@archiso /]\nVamos a crear el archivo de swap utilizando el comando dd, el archivo que voy a crear será de 2GB, es decir 2 bloques de 1GB cada uno.  1  dd if=/dev/zero of=/swapfile bs=1G count=2 status=progress   Ahora hay que cambiar los permisos del archivo  1  chmod 600 /swapfile   Cambia el tipo de archivo a swap  1  mkswap /swapfile   Habilita el archivo con:  1  swapon /swapfile   Agrega el archivo al sistema de archivos, es decir, al archivo fstab. (Yo voy a utilizar vim, si instalaste nano, utiliza nano)  1  vim /etc/fstab   Al final del archivo agrega lo siguiente:\n1  /swapfile none swap defaults 0 0   Configura tu zona horaria Ahora podemos continuar con la configuración de nuestra instalación, así que toca el turno de la zona horaria.\n Primero vamos a ver un listado de las zonas horarias disponibles. La zona horaria donde me encuentro es la zona de Chicago, sustituye Chicago por la ciudad que te corresponda, por ejemplo Mexico  1  timedatectl list-timezones | grep Chicago   Una vez identificada la zona horaria, creamos un enlace simbolico en etc/localtime  1  ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime   Ahora ya podemos sincronizar el reloj del sistema con el reloj de hardware  1  hwclock --systohc   Configura tu \u0026ldquo;Localización\u0026rdquo; Esto es para decirle a Arch Linux donde te encuentras y cual es el grupo de caracteres que corresponden a tu idioma por ejemplo.\nEn mi caso voy a utlizar Inglés de Estados Unidos, el código es \u0026ldquo;en_US.UTF-8\u0026rdquo; pero por ejemplo, si te encuentras en México y estás utilizando teclado en Español y deberás utilizar el código de \u0026ldquo;es_MX.UTF-8\u0026rdquo;.\nNota: Puedes habilitar más de un código de localización.\n Para habilitar el código de localización deseado, edita el siguente archivo y descomenta la línea donde se encuentre el código que andas buscando. (De nuevo, yo utilizo vim, tu puedes hacerlo con nano o con el que hayas instalado al inicio)  1  vim /etc/locale.gen   Genera la localización en el sistema  1  locale-gen   Ahora necesitamos crear el archivo de configuración en nuestra instalación para eso:  1  echo LANG=en_US.UTF-8 \u0026gt;\u0026gt; /etc/locale.conf   Nota: Sustituye \u0026ldquo;en_US.UTF-8\u0026rdquo; por el código que hayas habilitado en el paso anterior\n(Opcional) Si al comienzo de la instalación seleccionaste el tipo de teclado, deberás agregarlo a tu instalación con el siguente comando:\n(Suponiendo que seleccionaste \u0026ldquo;es\u0026rdquo;)  1  echo KEYMAP=es \u0026gt;\u0026gt; /etc/vconsole.conf   Configura la Red  Crea el archivo \u0026ldquo;hostname\u0026rdquo; para darle un nombre a tu máquina virutal. En mi caso voy a ser creativo y le daré el nombre de \u0026ldquo;archlinux\u0026rdquo;  1  vim /etc/hostname   Agrega lo siguiente a tu archivo /etc/hosts  1  vim /etc/hosts   1 2 3  127.0.0.1\tlocalhost ::1\tlocalhost 127.0.1.1\tarchlinx.localdomain\tarchlinux   Crea un password para root El siguiente paso de la instalación es darle un password a nuestro usuario de root.\nComo ya estamos en nuestra instalación, para cambiar el password solo debemos teclear:\n1  passwd   En el prompt escribe el nuevo password (Uno que no se te olvide) y en el siguente prompt vuelve a escribir el mismo password para confirmarlo.\nInstala los paquetes finales Es momento de instalar nuestro \u0026ldquo;boot loader\u0026rdquo; y paquetes finales antes de reiniciar la máquina. GRUB será nuestro boot loader.\n Instala los siguientes paquetes. Puedes agregar paquetes que creas necesarios.  1  pacman -S grub efibootmgr networkmanager network-manager-applet dialog os-prober mtools dosfstools base-devel linux-headers cups reflector openssh git xdg-utils xdg-user-dirs virtualbox-guest-utils   Acepta todos los prompts por defecto. Y presiona ENTER para continuar con la instalación\nSi te aparece la siguiente pantalla, presiona ENTER para aceptar las llaves PGP.\nInstala GRUB Es momento de instalar grub en el directorio /boot/efi que creamos al inicio, que es la partición de inicio\n1  grub-install --target=x86_64-efi --efi-directory=/boot/efi --botloader-id=GRUB   Ahora necesitamos crear el archivo de configuración  1  grub-mkconfig -o /boot/grub/grub.cfg   Habilita los servicios Llegó el momento de habilitar los servicios que correrán cada que reinicies la máquina.\n Habilita el manejador de la red Continua con el servicio de SSH Luego el servicio para imprimir  1 2 3  systemctl enable NetworkManager systemctl enable sshd systemctl enable org.cups.cupsd   Crea tu usuario Todo lo hemos hecho con el usuario de root, pero siempre es conveniente tener tu propio usuario para no utilizar root para las tareas diarias. Voy a crear mi usuario que se llamará \u0026ldquo;jorge\u0026rdquo;.\n Crea el usuario y asignalo al grupo \u0026ldquo;wheel\u0026rdquo; Crea un password para tu usuario  1 2  useradd -mG wheel jorge passwd jorge   Ahora para darle privilegios de \u0026ldquo;sudo\u0026rdquo; y puedas ejecutar comandos como superusuario \u0026ldquo;root\u0026rdquo;, debemos descomentar la linea que dice \u0026quot;%wheel ALL=(ALL) ALL\u0026rdquo; con el siguiente comando  Recuerda que puedes sustituir \u0026ldquo;vim\u0026rdquo; por \u0026ldquo;nano\u0026rdquo; si lo prefieres.\n1  EDITOR=vim visudo   Sal de la instalación y reinicia la máquina virtual Con esto terminamos la instalación, así que solo queda:\n Salir de la instalación Desmontar las particiones Reiniciar la máquina virtual  1 2 3  exit umount -a reboot   Instalación Exitosa Después de reiniciar la máquina virtual verás que GRUB está instalado y debe estar funcionando correctamente.\nEntra a tu nueva instalación de Arch Linux con el usuario y password que creaste para verificar que todo esté funcionando correctamente.\nSi encontraste este tutorial útil no olvides que puedes compartirlo con tus compañeros, familiares y amigos utilizando los botones al final del artículo.\nNo dejes de visitarme porque estaré subiendo más tutoriales, ahora lo que sigue es instalar un escritorio en esta máquina virtual. ¿Cuál te gustaría instalar? ¿Gnome? ¿KDE? ¿O talvez un manejador de ventanas como i3 o awesome?\n","description":"Hoy vamos a instalar ArchLinux en una máquina virtual en VirtualBox. La instalación es muy parecida a la que deberás llevar a cabo cuando lo instalemos en una laptop o PC. Bien, entoces, comencemos...","id":0,"section":"blog","tags":["archlinux","linux"],"title":"Como Instalar Archlinux en Virtualbox","uri":"/blog/linux/como-instalar-archlinux-en-virtualbox/"},{"content":"Guia de Instalacion Oficial: https://archlinuxarm.org/platforms/armv6/raspberry-pi\nBajar Arch Linux para Raspberry Pi. https://archlinuxarm.org/about/downloads\nhttp://os.archlinuxarm.org/os/ArchLinuxARM-rpi-4-latest.tar.gz\nCrear SD Card. Una vez que tenemos arch en nuestro disco o si deseas mientras se descarga, comencemos a configurarla tarjeta SD, inserta la tarjeta en tu computadora.\nPrimero debemos verificar la tarjeta donde queremos instalar Arch.\n1  lsblk   ATENCIÓN: En mi caso el comando lsblk me dice que mi tarjeta está en /dev/mmcblk0, de aquí en adelante debes sustituir mmcblk0 por el dispositivo en tu computadora. Todos los cambios hechos en tu sistema son tu responsabilidad y yo no puedo hacerme responsable por ellos. Por favor continúa bajo tu propio riesgo.\nVamos a crear las particiones en la tarjeta. En este caso la tarjeta no tiene particiones, es completamente nueva.\n1  sudo fdisk /dev/mmcblk0   En el prompt presiona o.\nEsto borrará cualquier partición que se encuentre en la tarjeta.\nLuego, presiona \u0026lsquo;p\u0026rsquo; para listar las particiones.\nDespués presiona n, seguido de p para crear una partición primaria, 1 para designarla como la primera partición, presiona ENTER para aceptar los valores por defecto para el primer sector, después escribe +100M para crear la partición de 100 MB.\nPresiona t, luego c para definir el tipo de partición como W95 FAT32. Esta primer partición será nuestra partición “boot”\nPresiona n, para crear una nueva partición que será “root” y es donde estará el sistema operativo. Luego presiona p para definir una partición primaria, presiona 2 para definir que esta será nuestra 2da partición en la tarjeta, luego presiona ENTER dos veces para aceptar el sector de inicial y final de la partición.\nSi deseas revisar los cambios que acabas de hacer, presiona p para listar las nuevas particiones.\nPara guardar los cambios físicamente en la tarjeta y salir de fdisk, presiona w.\nAhora, primero, vamos a formatear la primera partición que creamos y montarla en un directorio local que llamaremos “boot”\n$ sudo mkfs.vfat /dev/mmcblk0p1\n$ mkdir boot\n$ sudo mount /dev/mmcblk0p1 boot\nDespués tenemos que formatear nuestra 2da partición y montarla en un directorio local que llamaremos simplemente “root”\n$ sudo mkfs.ext4 /dev/mmcblk0p2\n$ mkdir root\n$ sudo mount /dev/mmcblk0p1 root\nAhora vamos a descomprimir el archivo que dejamos bajando\n$ sudo bsdtar -xpf ArchLinuxARM-rpi-4-latest.tar.gz -C root\n$ sudo sync\nAhora necesitamos mover los archivos de root/boot a boot (directorio local)\n$ sudo mv root/boot/* boot\n(Opcional) Si deseas hacerle un overclock a tu raspberry, tenemos que modificar el archivo boot/config.txt y agregar los siguientes parámetros utilizando nano o vim.\nLos siguientes parámetros han sido probados en una Raspberry Pi 4 con 8 GB de memoria.\nover_voltage=6\narm_freq=2147\ngpu_freq=750\nDesmontamos los directorios locales para arrancar nuestra Raspberry Pi con Arch Linux.\n$ sudo umount boot root\nInserta la tarjeta en la raspberry Pi y conectala a la corriente. Es preferible que tengas la Raspberry conectada a la red con cable.\nEn tu ruteador busca la Raspberry e identifica la dirección IP que le asignó\nConéctate utilizando SSH con el usuario por defecto llamado “alarm” el password es “alarm”\nDespués cambiate a root, el password es root.\nLo último que voy a cubrir en este documento es el inicializar pacman y crear las llaves.\n$ pacman-key \u0026ndash;init\n$ pacman-key \u0026ndash;populate archlinuxarm\nY ya para terminar, actualiza Arch\nAgregar usuario “alarm” y habilitarel grupo “wheel” utilizando visudo\nusermod –aG wheel UserName\nPara verificar la temperatura:\n$ /opt/vc/bin/vcgencmd measure_temp\nhttps://linuxhint.com/raspberry_pi_temperature_monitor/#:~:text=If%20the%20temperature%20of%20the,for%20it%20to%20work%20properly.\nPara verificar la velocidad del CPU:\n$ /opt/vc/bin/vcgencmd measure_clock arm\nPara el recuadro alrededor de la pantalla:\ndisable_overscan=1\nInstalar i3\nInstalar XFCE4\nInstalar LDXM\nInstalar i3-wm\nInstalar i3-wm\n[alarm@alarmpi ~]$ sudo pacman -S i3-wm i3status i3blocks dmenu terminator\ncommunity/i3status 2.13-3 (i3)\nGenerates status bar to use with i3bar, dzen2 or xmobar\ncommunity/i3-wm 4.18.1-1 (i3)\nAn improved dynamic tiling window manager\ncommunity/i3blocks 1.5-3 (i3)\nDefine blocks for your i3bar status line\ncommunity/dmenu 4.9-2\nGeneric menu for X\nInstalar\n1 2 3 4  sudo pacman -S xorg-server xf86-video-fbdev lxdm startx sudo systemctl enable lxdm sudo systemctl start lxdm   ","description":"En esta ocasión vamos a instalar ArchLinux en una Raspberry Pi 4, la Raspberry que estoy utilizand tiene 8GB de memoria.","id":1,"section":"blog","tags":["archlinux","raspberry"],"title":"Como Instalar Archlinux en Raspberry Pi 4","uri":"/blog/linux/como-instalar-archlinux-raspberry-pi-4/"},{"content":"En este post aprenderás a instalar y configurar NeoVim como un IDE para desarrollar en Python y muchos otros trucos más.\n¿Qué es y porqué NeoVim? ","description":"Aprende a configurar Neovim como un IDE y deja de utilizar Vscode de una vez por todas.","id":2,"section":"blog","tags":["vim","vi","neovim"],"title":"Como Configurar Neovim Como Vscode","uri":"/blog/neovim/como-configurar-neovim-como-vscode/"},{"content":"Paso 1: Descargar Python El primer paso es descargar descargar python del sitio oficial: https://www.python.org/\nSolo secciona la opción de \u0026ldquo;Download\u0026rdquo; en la página principal, el stitio por defecto debe detectar que estás utlizando Windows y te ofrecerá el instalador que requieres.\nPaso 2: Ejecuta la instalación El siguiente paso es obvio, ejecuta la instalación.\nEs importante que durante la instalación selecciones que deseas instalar PIP y presiona \u0026ldquo;Next\u0026rdquo;\nEn la siguiente pantalla deja los parametros por default y presiona \u0026ldquo;Install\u0026rdquo;.\nA mi en lo personal me gusta que la instalación de Python esté en C:\\Python\u0026lt;\u0026lt;version\u0026gt;\u0026gt; donde la versión en este caso es la 3.8.\nPaso 3: Verifica la instalación Para verificar que todo haya ido conforme a lo planeado y que tienes Python instalado de manera correcta solo abre una ventana de comando y escribe\n1  python --version   Por último verifica que se haya instalado correctamente PIP.\n1  pip   pip tiene que regresar la ayuda, algo parecido a la imágen anterior. Si recibes un mensaje de error diciendo que no se encuentra instalado, solo ejecuta la instalación de nuevo y selecciona \u0026ldquo;Reparar\u0026rdquo;\nEso es todo por hoy, espero que no hayas tenido problemas al instalar python.\nSiguente tutorial será crear tu primer programa en #Python\n","description":"En tan solo 3 sencillos pasos, aprende a instalar python 3 en Windows 10.","id":3,"section":"blog","tags":["python","windows"],"title":"Como Instalar Python en Windows 10 en 3 Sencillos Pasos.","uri":"/blog/python/como-instalar-python-en-windows-10/"}]